plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
}

group = 'org.nabihi'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

jacoco {
	toolVersion = "0.8.11"
}
ext {
	mapstructVersion = "1.5.3.Final"
	lombokVersion = "1.18.26"
	lombokMapstructBindingVersion = "0.2.0"
}


repositories {
	mavenCentral()
}

dependencies {
	implementation("com.google.api-client:google-api-client-jackson2:1.20.0")
	implementation 'com.google.api-client:google-api-client:2.0.0'
	//implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
	implementation 'com.google.apis:google-api-services-gmail:v1-rev20220404-2.0.0'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
	implementation 'com.sun.mail:javax.mail:1.6.2'

	//implementation 'com.auth0:java-jwt:3.18.2'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	//implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	//implementation 'org.springframework.security:spring-security-oauth2-jose'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'

	implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
	implementation 'org.apache.httpcomponents.client5:httpclient5'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}", "org.projectlombok:lombok:${lombokVersion}", "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation('de.flapdoodle.embed:de.flapdoodle.embed.mongo.spring3x:4.12.3')


	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.security:spring-security-oauth2-jose'
	implementation 'com.auth0:java-jwt:3.18.2'
}

jacocoTestReport {
	dependsOn test
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					'**/*getErrorMessage*',
					'**/*handleHttpClientException*',
					'**/GlobalControllerExceptionHandler*',
					'**/HttpErrorInfo*',
					'**/utils/**'
			])
		}))
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.0
			}
		}
	}
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

